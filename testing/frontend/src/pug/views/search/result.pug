include ../mixins/category-breadcrumb.pug

mixin result(dataset)
	- var versionIndex = getHighlightedVersionIndex(dataset);
	- var version = dataset.versions[versionIndex];
	- var repoIndex = getHighlightedRepoIndex(version);
	- var repo = version.repos[repoIndex];
	- var iconData = Object.assign({}, dataset);
	- iconData.processType = version.processType;
	- iconData.flowType = version.flowType;
	.result
		img.model-icon-small(src='images/model/small/' + getIcon(iconData), aria-label='Model icon of ' + dataset.type)
		.result-content
			h4: +link(dataset, repo, version.name, null, true)
			if dataset.type === 'FLOW' && version.flowType === 'ELEMENTARY_FLOW' && version.category && version.category.indexOf('/') !== -1
				- var categories = version.category.split('/')
				.category=categories[categories.length - 2] + ' / ' + categories[categories.length - 1]
			if version.location || version.validFromYear || version.validUntilYear
				.result-details
					+location(version)
					+validity(version)
			+repositories(dataset, versionIndex)
			+tags(version, repo)
		+actions(dataset, version, repo)

mixin link(dataset, repo, title, defaultLink, highlight)
	- var url = repo.path + '/dataset/' + dataset.type + '/' + dataset.refId;
	if repo.commitId
		- url += '?commitId=' + repo.commitId;
	a(href=url class=defaultLink?'default-link':null)
		span(class=highlight?'result-text':null)=title

mixin repositories(dataset, versionIndex)
	- var version = dataset.versions[versionIndex];
	- var versions = dataset.versions.length;
	.result-repositories found in #{version.repos.length === 1 ? 'repository' : 'repositories'} 
		span.comma-separated
			each repo in version.repos
				+link(dataset, repo, repo.path, true)
	if versions > 1
		div #{versions - 1} other #{versions > 2 ? 'versions' : 'version'} found in  
			span.comma-separated
				each v, index in dataset.versions
					if index !== versionIndex
						each repo in v.repos
							+link(dataset, repo, repo.path, true)

	

mixin validity(version)
	if version.validFromYear || version.validUntilYear
		div
			img(src='images/calendar.png', aria-label='Calendar icon')
			if version.validFromYear && version.validUntilYear && version.validFromYear != version.validUntilYear
				|  #{version.validFromYear} - #{version.validUntilYear}
			else if version.validFromYear
				|  #{version.validFromYear}
			else if version.validUntilYear
				|  #{version.validUntilYear}

mixin location(version)
	if version.location
		div 
			img(src='images/model/small/location.png', aria-label='Location icon')
			|  #{version.location}

mixin tags(version, repo)
	- var repoTags = repo.tags || [] 
	- var versionTags = version.tags || []
	if repoTags.length || versionTags.length
		.result-tags
			each tag in repoTags
				span.badge.badge-primary=tag
			each tag in versionTags
				span.badge=tag					

mixin actions(dataset, version, repo)
	.dropdown.btn-group
		button.btn.btn-success.btn-sm.dropdown-toggle(data-toggle='dropdown' aria-haspopup='true' aria-expanded='false')
			span.glyphicon.glyphicon-download
			span.text Download
			span.caret
		- var repoName = repo.path.split('/')[1]
		ul.dropdown-menu
			li: a(href='#', data-format='json', data-datatype='dataset', data-group=repo.group, data-repo=repoName, data-type=dataset.type, data-ref-id=dataset.refId, data-commit-id=repo.commitId) Dataset as JSON-LD (openLCA 2.x)
			li: a(href='#', data-format='json1', data-datatype='dataset', data-group=repo.group, data-repo=repoName, data-type=dataset.type, data-ref-id=dataset.refId, data-commit-id=repo.commitId) Dataset as JSON-LD (openLCA 1.x)
			li.divider(role='separator')
			li: a(href='#', data-format='json', data-datatype='repository', data-group=repo.group, data-repo=repoName, data-commit-id=repo.commitId) Repository as JSON-LD (openLCA 2.x)
			li: a(href='#', data-format='json1', data-datatype='repository', data-group=repo.group, data-repo=repoName, data-commit-id=repo.commitId) Repository as JSON-LD (openLCA 1.x)
