include ./mixins.pug

mixin data-quality-matrix(system, uncertainties, entries)
	if system.indicators && system.indicators.length
		- clazz = uncertainties ? 'uncertainties' : (entries ? 'center-inline' : null);
		table.data-quality.no-head(class=clazz?clazz:null)
			thead
				tr
					th
					each values in getArrayValues(getValue(system, 'indicators[0]'), getValue(compareTo, 'indicators[0]'), 'DQ_SCORE', 'scores')
						+data-quality-score-header(values[0], values[1], uncertainties)
			tbody
				each values in getArrayValues(system, compareTo, 'DQ_INDICATOR', 'indicators')
					+data-quality-indicator-row(values[0], values[1], uncertainties, entries)

mixin data-quality-indicator-row(indicator, otherIndicator, uncertainties, entries)
	- var changed = compareTo && !otherIndicator ? 'added' : (compareTo && !indicator ? 'removed' : null);
	tr(data-compare=changed)
		td(data-path=uncertainties||!indicator?null:'indicators[' + indicator.position + ']')
			+compare-icon(changed)
			+sub-field(indicator, otherIndicator, 'name', 'position')
		each values in getArrayValues(indicator, otherIndicator, 'DQ_SCORE', 'scores')
			+data-quality-score-cell(indicator, otherIndicator, values[0], values[1], uncertainties, entries)

mixin data-quality-score-cell(indicator, otherIndicator, score, otherScore, uncertainties, entries)
	- var indicatorPos = indicator?indicator.position:otherIndicator.position;
	- var scorePos = score?score.position:otherScore.position;
	if uncertainties
		+sub-field-cell(score, otherScore, 'uncertainty')(data-path=indicator&&score?'indicators[' + indicatorPos + '].scores[' + scorePos + '].uncertainty':null, data-indicator=indicatorPos, data-score=scorePos, data-table-type='uncertainty')
	else
		- var color = getDQColor(system, indicator?indicator:otherIndicator, score?score:otherScore, entries);
		+sub-field-cell(score, otherScore, 'description')(style='background-color:' + color, data-indicator=indicatorPos, data-score=scorePos, data-table-type='description')
			span(data-path=indicator&&score?'indicators[' + indicatorPos + '].scores[' + scorePos + '].description':null)

mixin data-quality-score-header(score, otherScore, uncertainties)
	- var path = null;
	if !uncertainties && score
		- path = 'scores[' + score.position + ']';
	+sub-field-header(score, otherScore, 'label', 'position')(data-path=path)