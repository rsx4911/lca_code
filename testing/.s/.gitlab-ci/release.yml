stages:
  - validate
  - build

workflow:
  rules:
    - if: $CI_COMMIT_TAG # Only run when a tag is pushed.

validate:
  stage: validate

  script:
    - echo "Validating release tag $CI_COMMIT_TAG"
    - |
      if [[ $CI_COMMIT_TAG =~ ^([0-9]+\.[0-9]+\.[0-9]+)-release$ ]]; then
        echo "VERSION=${BASH_REMATCH[1]}" > tag.env
      echo "The tag format is validated: Version ${BASH_REMATCH[1]}"
      else
        echo "Error: The tag $CI_COMMIT_TAG must be in the format '<major>.<minor>.<patch>-release' (e.g., 1.2.3-release)."
        exit 1
      fi
  artifacts:
    reports:
      dotenv: tag.env

build:
  stage: build

  image: docker:20-dind
  variables:
    # using "docker" as the host is only possible if you alias the service below
    DOCKER_HOST: tcp://docker:2375
    # could be wrong here but although Docker defaults to overlay2,
    # Docker-in-Docker (DIND) does not according to the following GitLab doc:
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-overlayfs-driver
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:dind
      alias: docker
      command: ["--tls=false"]

  script:
    - echo "Building Docker image for version $VERSION"
    - TAG="registry.greendelta.com/hub/collaboration-server:$VERSION"
    - TAG_LATEST="registry.greendelta.com/hub/collaboration-server:latest"
    # TODO remove --build-arg "VERSION=$VERSION" when the olca-modules artifact
    #   is supposed to be always available in the Maven repository
    - docker build .
      --file docker/Dockerfile
      --build-arg "VERSION=$VERSION"
      --tag "$TAG"
      --tag "$TAG_LATEST"
    - echo "$HUB_REGISTRY_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin registry.greendelta.com
    - docker push "$TAG"
    - docker push "$TAG_LATEST"
